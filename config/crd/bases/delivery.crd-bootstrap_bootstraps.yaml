---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: bootstraps.delivery.crd-bootstrap
spec:
  group: delivery.crd-bootstrap
  names:
    kind: Bootstrap
    listKind: BootstrapList
    plural: bootstraps
    singular: bootstrap
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Bootstrap is the Schema for the bootstraps API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BootstrapSpec defines the desired state of Bootstrap.
            properties:
              continueOnValidationError:
                description: ContinueOnValidationError will still apply a CRD even
                  if the validation failed for it.
                type: boolean
              interval:
                description: Interval defines the regular interval at which a poll
                  for new version should happen.
                type: string
              prune:
                description: Prune will clean up all applied objects once the Bootstrap
                  object is removed.
                type: boolean
              source:
                description: Source defines a reference to a source which will provide
                  a CRD based on some contract.
                properties:
                  configMap:
                    description: ConfigMap type source.
                    properties:
                      name:
                        description: Name of the config map.
                        type: string
                      namespace:
                        description: Namespace of the config map.
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  github:
                    description: GitHub type source.
                    properties:
                      baseAPIURL:
                        description: BaseAPIURL is used for the GitHub API url. Defaults
                          to api.github.com if not defined.
                        type: string
                      baseURL:
                        description: BaseURL is used for the GitHub url. Defaults
                          to github.com if not defined.
                        type: string
                      manifest:
                        description: Manifest defines the name of the manifest that
                          contains the CRD definitions on the GitHub release page.
                        type: string
                      owner:
                        description: Owner defines the owner of the repository.
                        type: string
                      repo:
                        description: Repo defines the name of the repository.
                        type: string
                      secretRef:
                        description: SecretRef contains a pointed to a Token in case
                          the repository is private.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - manifest
                    - owner
                    - repo
                    type: object
                  gitlab:
                    description: GitLab type source.
                    properties:
                      baseAPIURL:
                        description: BaseAPIURL is used for the GitLab API url. Defaults
                          to api.github.com if not defined.
                        type: string
                      manifest:
                        description: Manifest defines the name of the manifest that
                          contains the CRD definitions on the GitLab release page.
                        type: string
                      owner:
                        description: Owner defines the owner of the repository. Otherwise,
                          known as Namespace.
                        type: string
                      repo:
                        description: Repo defines the name of the repository.
                        type: string
                      secretRef:
                        description: SecretRef contains a pointed to a Token in case
                          the repository is private.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - manifest
                    - owner
                    - repo
                    type: object
                  helm:
                    description: Helm type source.
                    properties:
                      chartName:
                        description: ChartName defines the name of the chart to fetch
                          from the reference URL.
                        type: string
                      chartReference:
                        description: ChartReference is the location of the helm chart.
                          The scheme must be either HTTP or OCI. [chart URL | repo/chartname]
                        type: string
                      secretRef:
                        description: Insecure defines SecretRef contains a pointer
                          to a secret that contains any needed credentials to access
                          the helm repository.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - chartName
                    - chartReference
                    type: object
                  url:
                    description: URL type source.
                    properties:
                      secretRef:
                        description: SecretRef contains a pointed to a Token in case
                          the URL isn't public.
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      url:
                        description: URL defines the URL from which do download the
                          YAML content from.
                        type: string
                    required:
                    - url
                    type: object
                type: object
              template:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: Template defines a set of values to test a new version
                  against.
                type: object
              version:
                description: Version defines constraints for sources to check against.
                  It can either be a semver constraint or a Digest in case of URLs.
                  If a digest is defined, URL sync will ONLY SYNC that digest. If
                  the digest differs, it will NOT install it.
                properties:
                  digest:
                    description: Digest defines the digest of the content pointing
                      to a URL.
                    type: string
                  semver:
                    description: Semver defines a possible constraint like `>=v1`.
                    type: string
                type: object
            required:
            - source
            type: object
          status:
            description: BootstrapStatus defines the observed state of Bootstrap.
            properties:
              conditions:
                description: Conditions contains the conditions of this object.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastAppliedCRDNames:
                additionalProperties:
                  type: integer
                description: LastAppliedCRDNames contains the names of the last applied
                  CRDs and the number of times they were applied.
                type: object
              lastAppliedRevision:
                description: LastAppliedRevision version is the version or the digest
                  that was successfully applied.
                type: string
              lastAttemptedRevision:
                description: LastAttemptedRevision contains the version or the digest
                  that was tried to be applied and was either successful or failed.
                type: string
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
